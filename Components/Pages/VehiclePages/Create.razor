@page "/vehicles/create"
@using Microsoft.EntityFrameworkCore
@using BlazorApp8.Models
@inject IDbContextFactory<BlazorApp8.Data.BlazorApp8Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Vehicle</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Vehicle" OnValidSubmit="AddVehicle" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="make" class="form-label">Make:</label> 
                <InputText id="make" @bind-Value="Vehicle.Make" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Vehicle.Make" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="model" class="form-label">Model:</label> 
                <InputText id="model" @bind-Value="Vehicle.Model" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Vehicle.Model" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="year" class="form-label">Year:</label> 
                <InputNumber id="year" @bind-Value="Vehicle.Year" class="form-control" /> 
                <ValidationMessage For="() => Vehicle.Year" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="licenseplate" class="form-label">LicensePlate:</label> 
                <InputText id="licenseplate" @bind-Value="Vehicle.LicensePlate" class="form-control" /> 
                <ValidationMessage For="() => Vehicle.LicensePlate" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/vehicles">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Vehicle Vehicle { get; set; } = new Vehicle
        {
            Make = string.Empty,
            Model = string.Empty
        };

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddVehicle()
    {
        using var context = DbFactory.CreateDbContext();
        context.Vehicle.Add(Vehicle);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/vehicles");
    }
}
